"""Create all tables with models

Revision ID: cbe264f3a8c4
Revises: db14ca35350e
Create Date: 2025-06-30 15:13:50.250491

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "cbe264f3a8c4"
down_revision: Union[str, Sequence[str], None] = "db14ca35350e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "api_requests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("endpoint", sa.String(length=255), nullable=False),
        sa.Column("method", sa.String(length=10), nullable=False),
        sa.Column("status_code", sa.Integer(), nullable=True),
        sa.Column("response_time_ms", sa.Integer(), nullable=True),
        sa.Column("request_size_bytes", sa.Integer(), nullable=True),
        sa.Column("response_size_bytes", sa.Integer(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("user_agent", sa.String(length=255), nullable=True),
        sa.Column("rate_limited", sa.Boolean(), nullable=True),
        sa.Column("cached_response", sa.Boolean(), nullable=True),
        sa.Column("worker_name", sa.String(length=100), nullable=True),
        sa.Column("task_id", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_api_requests_created_at"), "api_requests", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_api_requests_endpoint"), "api_requests", ["endpoint"], unique=False
    )
    op.create_index(op.f("ix_api_requests_id"), "api_requests", ["id"], unique=False)
    op.create_index(
        op.f("ix_api_requests_status_code"),
        "api_requests",
        ["status_code"],
        unique=False,
    )
    op.create_index(
        op.f("ix_api_requests_task_id"), "api_requests", ["task_id"], unique=False
    )
    op.create_table(
        "collection_jobs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("job_type", sa.String(length=50), nullable=False),
        sa.Column("subreddit_name", sa.String(length=255), nullable=True),
        sa.Column("status", sa.String(length=20), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("items_collected", sa.Integer(), nullable=True),
        sa.Column("items_stored", sa.Integer(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("task_id", sa.String(length=255), nullable=True),
        sa.Column("worker_name", sa.String(length=100), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_collection_jobs_id"), "collection_jobs", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_collection_jobs_job_type"),
        "collection_jobs",
        ["job_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_collection_jobs_status"), "collection_jobs", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_collection_jobs_subreddit_name"),
        "collection_jobs",
        ["subreddit_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_collection_jobs_task_id"), "collection_jobs", ["task_id"], unique=True
    )
    op.create_table(
        "collection_summaries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("subreddit_name", sa.String(length=255), nullable=True),
        sa.Column("total_posts_collected", sa.Integer(), nullable=True),
        sa.Column("total_comments_collected", sa.Integer(), nullable=True),
        sa.Column("total_users_collected", sa.Integer(), nullable=True),
        sa.Column("successful_jobs", sa.Integer(), nullable=True),
        sa.Column("failed_jobs", sa.Integer(), nullable=True),
        sa.Column("average_response_time_ms", sa.Float(), nullable=True),
        sa.Column("total_api_requests", sa.Integer(), nullable=True),
        sa.Column("rate_limited_requests", sa.Integer(), nullable=True),
        sa.Column("cached_requests", sa.Integer(), nullable=True),
        sa.Column("data_quality_score", sa.Float(), nullable=True),
        sa.Column("collection_efficiency", sa.Float(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_collection_summaries_date"),
        "collection_summaries",
        ["date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_collection_summaries_id"), "collection_summaries", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_collection_summaries_subreddit_name"),
        "collection_summaries",
        ["subreddit_name"],
        unique=False,
    )
    op.create_table(
        "data_quality_metrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("metric_name", sa.String(length=100), nullable=False),
        sa.Column("metric_value", sa.Float(), nullable=False),
        sa.Column("metric_type", sa.String(length=50), nullable=True),
        sa.Column("subreddit_name", sa.String(length=255), nullable=True),
        sa.Column("collection_job_id", sa.Integer(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("threshold_warning", sa.Float(), nullable=True),
        sa.Column("threshold_critical", sa.Float(), nullable=True),
        sa.Column("calculated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_data_quality_metrics_calculated_at"),
        "data_quality_metrics",
        ["calculated_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_data_quality_metrics_collection_job_id"),
        "data_quality_metrics",
        ["collection_job_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_data_quality_metrics_id"), "data_quality_metrics", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_data_quality_metrics_metric_name"),
        "data_quality_metrics",
        ["metric_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_data_quality_metrics_subreddit_name"),
        "data_quality_metrics",
        ["subreddit_name"],
        unique=False,
    )
    op.create_table(
        "ml_predictions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("model_name", sa.String(length=100), nullable=False),
        sa.Column("model_version", sa.String(length=50), nullable=True),
        sa.Column("model_type", sa.String(length=50), nullable=False),
        sa.Column("input_data_id", sa.String(length=255), nullable=False),
        sa.Column("input_type", sa.String(length=50), nullable=False),
        sa.Column("prediction", sa.JSON(), nullable=False),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("probability_distribution", sa.JSON(), nullable=True),
        sa.Column("feature_importance", sa.JSON(), nullable=True),
        sa.Column("actual_value", sa.JSON(), nullable=True),
        sa.Column("prediction_error", sa.Float(), nullable=True),
        sa.Column("predicted_at", sa.DateTime(), nullable=False),
        sa.Column("processing_time_ms", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_ml_predictions_id"), "ml_predictions", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_ml_predictions_input_data_id"),
        "ml_predictions",
        ["input_data_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_ml_predictions_model_name"),
        "ml_predictions",
        ["model_name"],
        unique=False,
    )
    op.create_table(
        "subreddit_analytics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("subreddit_name", sa.String(length=255), nullable=False),
        sa.Column("period_start", sa.Date(), nullable=False),
        sa.Column("period_end", sa.Date(), nullable=False),
        sa.Column("total_posts", sa.Integer(), nullable=True),
        sa.Column("total_comments", sa.Integer(), nullable=True),
        sa.Column("unique_authors", sa.Integer(), nullable=True),
        sa.Column("avg_score", sa.Float(), nullable=True),
        sa.Column("avg_comments_per_post", sa.Float(), nullable=True),
        sa.Column("avg_upvote_ratio", sa.Float(), nullable=True),
        sa.Column("avg_sentiment", sa.Float(), nullable=True),
        sa.Column("sentiment_consistency", sa.Float(), nullable=True),
        sa.Column("health_score", sa.Float(), nullable=True),
        sa.Column("activity_level", sa.Float(), nullable=True),
        sa.Column("engagement_quality", sa.Float(), nullable=True),
        sa.Column("growth_rate", sa.Float(), nullable=True),
        sa.Column("subscriber_growth", sa.Float(), nullable=True),
        sa.Column("content_diversity", sa.Float(), nullable=True),
        sa.Column("quality_trend", sa.Float(), nullable=True),
        sa.Column("gini_coefficient", sa.Float(), nullable=True),
        sa.Column("top_contributor_ratio", sa.Float(), nullable=True),
        sa.Column("moderation_activity", sa.Float(), nullable=True),
        sa.Column("removal_rate", sa.Float(), nullable=True),
        sa.Column("top_topics", sa.JSON(), nullable=True),
        sa.Column("engagement_metrics", sa.JSON(), nullable=True),
        sa.Column("growth_metrics", sa.JSON(), nullable=True),
        sa.Column("user_distribution", sa.JSON(), nullable=True),
        sa.Column("content_distribution", sa.JSON(), nullable=True),
        sa.Column("calculated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_subreddit_analytics_id"), "subreddit_analytics", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_subreddit_analytics_period_end"),
        "subreddit_analytics",
        ["period_end"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subreddit_analytics_period_start"),
        "subreddit_analytics",
        ["period_start"],
        unique=False,
    )
    op.create_index(
        op.f("ix_subreddit_analytics_subreddit_name"),
        "subreddit_analytics",
        ["subreddit_name"],
        unique=False,
    )
    op.create_table(
        "subreddits",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("display_name", sa.String(length=255), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("subscribers", sa.Integer(), nullable=True),
        sa.Column("created_utc", sa.DateTime(), nullable=True),
        sa.Column("is_nsfw", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_subreddits_id"), "subreddits", ["id"], unique=False)
    op.create_index(op.f("ix_subreddits_name"), "subreddits", ["name"], unique=True)
    op.create_table(
        "system_metrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("metric_name", sa.String(length=100), nullable=False),
        sa.Column("metric_value", sa.Float(), nullable=False),
        sa.Column("metric_type", sa.String(length=50), nullable=True),
        sa.Column("component", sa.String(length=100), nullable=True),
        sa.Column("worker_name", sa.String(length=100), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_system_metrics_component"),
        "system_metrics",
        ["component"],
        unique=False,
    )
    op.create_index(
        op.f("ix_system_metrics_created_at"),
        "system_metrics",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_system_metrics_id"), "system_metrics", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_system_metrics_metric_name"),
        "system_metrics",
        ["metric_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_system_metrics_worker_name"),
        "system_metrics",
        ["worker_name"],
        unique=False,
    )
    op.create_table(
        "topics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("topic_id", sa.String(length=50), nullable=False),
        sa.Column("topic_name", sa.String(length=255), nullable=True),
        sa.Column("subreddit_name", sa.String(length=255), nullable=True),
        sa.Column("model_type", sa.String(length=50), nullable=False),
        sa.Column("topic_words", sa.JSON(), nullable=False),
        sa.Column("topic_probability", sa.Float(), nullable=True),
        sa.Column("document_count", sa.Integer(), nullable=True),
        sa.Column("time_period", sa.Date(), nullable=True),
        sa.Column("trend_score", sa.Float(), nullable=True),
        sa.Column("coherence_score", sa.Float(), nullable=True),
        sa.Column("diversity_score", sa.Float(), nullable=True),
        sa.Column("representative_posts", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("model_version", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_topics_id"), "topics", ["id"], unique=False)
    op.create_index(
        op.f("ix_topics_subreddit_name"), "topics", ["subreddit_name"], unique=False
    )
    op.create_index(
        op.f("ix_topics_time_period"), "topics", ["time_period"], unique=False
    )
    op.create_index(op.f("ix_topics_topic_id"), "topics", ["topic_id"], unique=False)
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("password_hash", sa.String(length=255), nullable=True),
        sa.Column(
            "role",
            sa.Enum("USER", "ADMIN", "MODERATOR", name="userrole"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_utc", sa.DateTime(), nullable=True),
        sa.Column("comment_karma", sa.Integer(), nullable=True),
        sa.Column("link_karma", sa.Integer(), nullable=True),
        sa.Column("is_verified", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "posts",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=False),
        sa.Column("selftext", sa.Text(), nullable=True),
        sa.Column("url", sa.String(length=2000), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.Column("subreddit_id", sa.Integer(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("upvote_ratio", sa.Float(), nullable=True),
        sa.Column("num_comments", sa.Integer(), nullable=True),
        sa.Column("created_utc", sa.DateTime(), nullable=False),
        sa.Column("is_self", sa.Boolean(), nullable=True),
        sa.Column("is_nsfw", sa.Boolean(), nullable=True),
        sa.Column("is_locked", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["subreddit_id"],
            ["subreddits.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_metrics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("subreddit_name", sa.String(length=255), nullable=True),
        sa.Column("activity_score", sa.Float(), nullable=False),
        sa.Column("influence_score", sa.Float(), nullable=False),
        sa.Column("reputation_score", sa.Float(), nullable=False),
        sa.Column("engagement_rate", sa.Float(), nullable=True),
        sa.Column("interaction_quality", sa.Float(), nullable=True),
        sa.Column("content_quality_score", sa.Float(), nullable=True),
        sa.Column("posting_frequency", sa.Float(), nullable=True),
        sa.Column("sentiment_trend", sa.Float(), nullable=True),
        sa.Column("consistency_score", sa.Float(), nullable=True),
        sa.Column("community_diversity", sa.Float(), nullable=True),
        sa.Column("crosspost_ratio", sa.Float(), nullable=True),
        sa.Column("detailed_metrics", sa.JSON(), nullable=True),
        sa.Column("period_start", sa.DateTime(), nullable=True),
        sa.Column("period_end", sa.DateTime(), nullable=True),
        sa.Column("calculated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_metrics_id"), "user_metrics", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_metrics_subreddit_name"),
        "user_metrics",
        ["subreddit_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_metrics_user_id"), "user_metrics", ["user_id"], unique=False
    )
    op.create_table(
        "comments",
        sa.Column("id", sa.String(length=255), nullable=False),
        sa.Column("post_id", sa.String(length=255), nullable=True),
        sa.Column("parent_id", sa.String(length=255), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.Column("body", sa.Text(), nullable=True),
        sa.Column("score", sa.Integer(), nullable=True),
        sa.Column("created_utc", sa.DateTime(), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "text_analysis",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.String(length=255), nullable=True),
        sa.Column("comment_id", sa.String(length=255), nullable=True),
        sa.Column("sentiment_score", sa.Float(), nullable=True),
        sa.Column("sentiment_label", sa.String(length=20), nullable=True),
        sa.Column("emotion_scores", sa.JSON(), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("keywords", sa.JSON(), nullable=True),
        sa.Column("entities", sa.JSON(), nullable=True),
        sa.Column("topics", sa.JSON(), nullable=True),
        sa.Column("quality_score", sa.Float(), nullable=True),
        sa.Column("readability_score", sa.Float(), nullable=True),
        sa.Column("processed_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_text_analysis_comment_id"),
        "text_analysis",
        ["comment_id"],
        unique=False,
    )
    op.create_index(op.f("ix_text_analysis_id"), "text_analysis", ["id"], unique=False)
    op.create_index(
        op.f("ix_text_analysis_post_id"), "text_analysis", ["post_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_text_analysis_post_id"), table_name="text_analysis")
    op.drop_index(op.f("ix_text_analysis_id"), table_name="text_analysis")
    op.drop_index(op.f("ix_text_analysis_comment_id"), table_name="text_analysis")
    op.drop_table("text_analysis")
    op.drop_table("comments")
    op.drop_index(op.f("ix_user_metrics_user_id"), table_name="user_metrics")
    op.drop_index(op.f("ix_user_metrics_subreddit_name"), table_name="user_metrics")
    op.drop_index(op.f("ix_user_metrics_id"), table_name="user_metrics")
    op.drop_table("user_metrics")
    op.drop_table("posts")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_topics_topic_id"), table_name="topics")
    op.drop_index(op.f("ix_topics_time_period"), table_name="topics")
    op.drop_index(op.f("ix_topics_subreddit_name"), table_name="topics")
    op.drop_index(op.f("ix_topics_id"), table_name="topics")
    op.drop_table("topics")
    op.drop_index(op.f("ix_system_metrics_worker_name"), table_name="system_metrics")
    op.drop_index(op.f("ix_system_metrics_metric_name"), table_name="system_metrics")
    op.drop_index(op.f("ix_system_metrics_id"), table_name="system_metrics")
    op.drop_index(op.f("ix_system_metrics_created_at"), table_name="system_metrics")
    op.drop_index(op.f("ix_system_metrics_component"), table_name="system_metrics")
    op.drop_table("system_metrics")
    op.drop_index(op.f("ix_subreddits_name"), table_name="subreddits")
    op.drop_index(op.f("ix_subreddits_id"), table_name="subreddits")
    op.drop_table("subreddits")
    op.drop_index(
        op.f("ix_subreddit_analytics_subreddit_name"), table_name="subreddit_analytics"
    )
    op.drop_index(
        op.f("ix_subreddit_analytics_period_start"), table_name="subreddit_analytics"
    )
    op.drop_index(
        op.f("ix_subreddit_analytics_period_end"), table_name="subreddit_analytics"
    )
    op.drop_index(op.f("ix_subreddit_analytics_id"), table_name="subreddit_analytics")
    op.drop_table("subreddit_analytics")
    op.drop_index(op.f("ix_ml_predictions_model_name"), table_name="ml_predictions")
    op.drop_index(op.f("ix_ml_predictions_input_data_id"), table_name="ml_predictions")
    op.drop_index(op.f("ix_ml_predictions_id"), table_name="ml_predictions")
    op.drop_table("ml_predictions")
    op.drop_index(
        op.f("ix_data_quality_metrics_subreddit_name"),
        table_name="data_quality_metrics",
    )
    op.drop_index(
        op.f("ix_data_quality_metrics_metric_name"), table_name="data_quality_metrics"
    )
    op.drop_index(op.f("ix_data_quality_metrics_id"), table_name="data_quality_metrics")
    op.drop_index(
        op.f("ix_data_quality_metrics_collection_job_id"),
        table_name="data_quality_metrics",
    )
    op.drop_index(
        op.f("ix_data_quality_metrics_calculated_at"), table_name="data_quality_metrics"
    )
    op.drop_table("data_quality_metrics")
    op.drop_index(
        op.f("ix_collection_summaries_subreddit_name"),
        table_name="collection_summaries",
    )
    op.drop_index(op.f("ix_collection_summaries_id"), table_name="collection_summaries")
    op.drop_index(
        op.f("ix_collection_summaries_date"), table_name="collection_summaries"
    )
    op.drop_table("collection_summaries")
    op.drop_index(op.f("ix_collection_jobs_task_id"), table_name="collection_jobs")
    op.drop_index(
        op.f("ix_collection_jobs_subreddit_name"), table_name="collection_jobs"
    )
    op.drop_index(op.f("ix_collection_jobs_status"), table_name="collection_jobs")
    op.drop_index(op.f("ix_collection_jobs_job_type"), table_name="collection_jobs")
    op.drop_index(op.f("ix_collection_jobs_id"), table_name="collection_jobs")
    op.drop_table("collection_jobs")
    op.drop_index(op.f("ix_api_requests_task_id"), table_name="api_requests")
    op.drop_index(op.f("ix_api_requests_status_code"), table_name="api_requests")
    op.drop_index(op.f("ix_api_requests_id"), table_name="api_requests")
    op.drop_index(op.f("ix_api_requests_endpoint"), table_name="api_requests")
    op.drop_index(op.f("ix_api_requests_created_at"), table_name="api_requests")
    op.drop_table("api_requests")
    # ### end Alembic commands ###
